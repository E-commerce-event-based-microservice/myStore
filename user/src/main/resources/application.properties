# server
server.port= 80


# database localhost/store
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:store}?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



# kafka producer
spring.kafka.producer.bootstrap-servers= ${KAFKA_HOST:ec2-54-198-251-208.compute-1.amazonaws.com"}:${KAFKA_PORT:9092}
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties[request.timeout.s]=60000


# kafka consumer
spring.kafka.consumer.bootstrap-servers= ${KAFKA_HOST:ec2-54-198-251-208.compute-1.amazonaws.com}:${KAFKA_PORT:9092}
spring.kafka.consumer.group-id= userEventsConsumers
spring.kafka.topic.name = userEvents
spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


